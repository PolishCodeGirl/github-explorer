{"version":3,"sources":["styles.js","reducers/githubUsers.js","store.js","components/Form.js","components/UserTile.js","components/Loader.js","components/InfoBox.js","components/Arrow.js","components/UserInformation.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","initialState","searchedName","githubAccounts","githubAccountsLoading","userRepos","nameOfUserWithReposLoading","userReposLoading","error","githubUsers","state","action","type","payload","userName","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","dispatch","getState","connect","useState","userNameValue","setUserNameValue","as","column","width","onSubmit","event","preventDefault","replace","axios","get","then","response","data","items","map","id","login","repos_url","catch","console","log","Input","value","placeholder","required","onChange","target","Button","styled","input","button","UserTile","title","description","stars","repoUrl","Wrapper","mTop","justifyBetween","itemsStart","TitleLink","href","rel","Description","Star","defaultProps","Div","a","p","Loader","div","attrs","InfoBox","message","props","justifyCenter","Arrow","span","isRotated","content","reposUrl","isOpen","setIsOpen","reposConter","setReposCounter","userReposAmount","length","slice","repo","name","stargazers_count","key","html_url","ShowMore","onClick","disabled","Boolean","mBottom","padding","itemsCenter","getUserRepos","background","Info","account","margin","AppContainer","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e6f834b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    box-sizing: border-box;\n  }\n  \n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  p {\n   margin: 0;\n  }\n`;\n","import axios from 'axios';\n\nconst LOAD_GITHUB_USERS = 'LOAD_GITHUB_USERS';\nconst LOADING_GITHUB_USERS = 'LOADING_GITHUB_USERS';\nconst LOAD_USER_REPOS = 'LOAD_USER_REPOS';\nconst LOADING_USER_REPOS = 'LOADING_USER_REPOS';\nconst CLEAR_USERS_REPOS = 'CLEAR_USERS_REPOS';\nconst SHOW_ERRORS = 'SHOW_ERRORS';\nconst CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nconst initialState = {\n  searchedName: '',\n  githubAccounts: [],\n  githubAccountsLoading: false,\n  userRepos: {},\n  nameOfUserWithReposLoading: '',\n  userReposLoading: false,\n  error: false,\n};\n\nexport const getGithubUsers = (userName) => (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n  dispatch({ type: LOADING_GITHUB_USERS });\n\n  axios\n    .get(`https://api.github.com/search/users?q=${userName}&page=1&per_page=5`)\n    .then((response) => {\n      dispatch({\n        type: LOAD_GITHUB_USERS,\n        payload: response.data.items.map(({ id, login, repos_url }) => ({ id, login, repos_url })),\n        userName,\n      });\n    })\n    .catch((error) => {\n      dispatch({ type: SHOW_ERRORS });\n      console.log('Error information ', error);\n    });\n};\n\nexport const getUserRepos = (userName, reposUrl) => (dispatch) => {\n  dispatch({ type: CLEAR_ERRORS });\n  dispatch({ type: LOADING_USER_REPOS, userName });\n\n  axios\n    .get(`${reposUrl}`)\n    .then((response) => {\n      dispatch({\n        type: LOAD_USER_REPOS,\n        payload: response.data.map(({ id, name, description, stargazers_count, html_url }) => ({\n          id,\n          name,\n          description,\n          stargazers_count,\n          html_url,\n        })),\n        userName,\n      });\n    })\n    .catch((error) => {\n      dispatch({ type: SHOW_ERRORS });\n      console.log('Error information ', error);\n    });\n};\n\nexport const clearUsersRepos = () => ({ type: CLEAR_USERS_REPOS });\n\nconst githubUsers = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_GITHUB_USERS:\n      return { ...state, githubAccounts: action.payload, githubAccountsLoading: false, searchedName: action.userName };\n    case LOADING_GITHUB_USERS:\n      return { ...state, githubAccountsLoading: true };\n    case LOAD_USER_REPOS:\n      return {\n        ...state,\n        userRepos: { ...state.userRepos, [action.userName]: action.payload },\n        userReposLoading: false,\n        nameOfUserWithReposLoading: '',\n      };\n    case LOADING_USER_REPOS:\n      return { ...state, userReposLoading: true, nameOfUserWithReposLoading: action.userName };\n    case CLEAR_USERS_REPOS:\n      return { ...state, userRepos: {} };\n    case SHOW_ERRORS:\n      return {\n        ...state,\n        error: true,\n        githubAccountsLoading: false,\n        userReposLoading: false,\n        nameOfUserWithReposLoading: '',\n      };\n    case CLEAR_ERRORS:\n      return { ...state, error: false };\n    default:\n      return state;\n  }\n};\n\nexport default githubUsers;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport githubUsers from './reducers/githubUsers';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(githubUsers, enhancer);\n\nexport const { dispatch, getState } = store;\n\nexport default store;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport Div from 'styled-kit/Div';\n\nimport { dispatch } from '../store';\nimport { getGithubUsers, clearUsersRepos } from '../reducers/githubUsers';\n\nconst mapStateToProps = ({ searchedName }) => ({ searchedName });\n\nconst propTypes = { searchedName: PropTypes.string.isRequired };\n\nconst Form = ({ searchedName }) => {\n  const [userNameValue, setUserNameValue] = useState('');\n\n  const handleOnChange = (event) => {\n    setUserNameValue(event.target.value);\n  };\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n\n    if (searchedName !== userNameValue) {\n      dispatch(getGithubUsers(userNameValue.replace(/\\s/g, '')));\n      dispatch(clearUsersRepos());\n    }\n  };\n\n  return (\n    <Div as=\"form\" column width=\"100%\" onSubmit={handleSearch}>\n      <Input type=\"text\" value={userNameValue} placeholder=\"Enter username\" required onChange={handleOnChange} />\n\n      <Button type=\"submit\">Search</Button>\n    </Div>\n  );\n};\n\nForm.propTypes = propTypes;\n\nexport default connect(mapStateToProps)(Form);\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: 16px;\n  padding: 10px;\n  outline: none;\n  background-color: #f2f2f2;\n  border: 2px solid #e0e0e0;\n  border-radius: 2px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  font-size: 16px;\n\n  padding: 10px;\n  margin-top: 18px;\n\n  background-color: #009de0;\n  border: 1px solid #009de0;\n  border-radius: 2px;\n\n  color: white;\n  outline: none;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Div from 'styled-kit/Div';\n\nconst propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  stars: PropTypes.number.isRequired,\n  repoUrl: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n  description: '',\n};\n\nconst UserTile = ({ title, description, stars, repoUrl }) => (\n  <Wrapper mTop={10} justifyBetween>\n    <Div column itemsStart>\n      <TitleLink href={repoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n        {title}\n      </TitleLink>\n      <Description>{description}</Description>\n    </Div>\n    <Star>{`${stars} ★`}</Star>\n  </Wrapper>\n);\n\nUserTile.propTypes = propTypes;\nUserTile.defaultProps = defaultProps;\n\nexport default UserTile;\n\nconst Wrapper = styled(Div)`\n  padding: 15px 5px;\n  background-color: #e0e0e0;\n  border-radius: 2px;\n\n  margin-left: 15px;\n`;\n\nconst TitleLink = styled.a`\n  font-weight: bold;\n  color: inherit;\n  text-decoration: none;\n\n  &:hover {\n    color: #009de0;\n  }\n`;\n\nconst Star = styled.p`\n  font-size: 14px;\n  font-weight: bold;\n  text-align: center;\n  flex: none;\n`;\n\nconst Description = styled.p`\n  font-size: 14px;\n`;\n","import styled from 'styled-components';\n\nconst Loader = styled.div.attrs(() => ({\n  'data-testid': 'loader',\n}))`\n  border: 6px solid #f3f3f3;\n  border-top-color: #009de0;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  animation: spin 2s linear infinite;\n\n  margin: 10px auto 0;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Div from 'styled-kit/Div';\n\nconst propTypes = {\n  message: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['info', 'error']),\n};\n\nconst defaultProps = {\n  type: 'info',\n};\n\nconst InfoBox = ({ message, type, ...props }) => (\n  <Wrapper justifyCenter mTop={10} type={type} {...props}>\n    <p>{message}</p>\n  </Wrapper>\n);\n\nInfoBox.propTypes = propTypes;\nInfoBox.defaultProps = defaultProps;\n\nexport default InfoBox;\n\nconst Wrapper = styled(Div)`\n  width: 100%;\n  border: 2px solid #009de0;\n  border-radius: 2px;\n\n  padding: 15px;\n  font-size: 14px;\n  color: white;\n  text-align: center;\n\n  ${({ type }) => {\n    if (type === 'info') {\n      return `\n        border: 2px solid #009de0;\n        background: rgba(0, 157, 224, 0.6);\n      `;\n    } else if (type === 'error') {\n      return `\n        border: 2px solid #da0c0c;\n        background: rgba(218, 12, 12, 0.6);\n       `;\n    }\n  }}\n`;\n","import styled from 'styled-components';\n\nconst Arrow = styled.span`\n  flex: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 24px;\n  height: 24px;\n  position: relative;\n  pointer-events: none;\n\n  &::before,\n  &::after {\n    content: '';\n    display: block;\n    width: 12px;\n    height: 2px;\n    position: absolute;\n    top: 12px;\n    background: black;\n    border-radius: 2px;\n  }\n\n  &::before {\n    right: 8px;\n    transform: rotate(45deg);\n  }\n  &::after {\n    left: 12px;\n    transform: rotate(-45deg);\n  }\n\n  transform: ${({ isRotated }) => (isRotated ? 'rotate(180deg)' : 'none')};\n  transition: transform 400ms;\n`;\n\nexport default Arrow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components/macro';\n\nimport Div from 'styled-kit/Div';\n\nimport { dispatch, getState } from '../store';\nimport { getUserRepos } from '../reducers/githubUsers';\n\nimport UserTile from './UserTile';\nimport Loader from './Loader';\nimport InfoBox from './InfoBox';\nimport Arrow from './Arrow';\n\nconst mapStateToProps = ({ userRepos, userReposLoading, nameOfUserWithReposLoading }) => ({\n  userRepos,\n  userReposLoading,\n  nameOfUserWithReposLoading,\n});\n\nconst propTypes = {\n  userName: PropTypes.string.isRequired,\n  reposUrl: PropTypes.string.isRequired,\n  userRepos: PropTypes.objectOf(PropTypes.array).isRequired,\n  userReposLoading: PropTypes.bool.isRequired,\n  nameOfUserWithReposLoading: PropTypes.string.isRequired,\n};\n\nconst UserInformation = ({ userName, reposUrl, userRepos, userReposLoading, nameOfUserWithReposLoading }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [reposConter, setReposCounter] = useState(5);\n\n  const userReposAmount = userRepos[userName]?.length;\n\n  const handleClick = () => {\n    setIsOpen((state) => !state);\n\n    if (getState().userRepos[userName]) return;\n\n    // Make sure that we cannot send another request when one is already pending\n    !userReposLoading && dispatch(getUserRepos(userName, reposUrl));\n  };\n\n  const handleShowMore = () => {\n    if (reposConter <= userReposAmount) {\n      setReposCounter(reposConter + 5);\n    }\n  };\n\n  let content;\n  if (userReposAmount > 0)\n    content = (\n      <>\n        {userRepos[userName]?.slice(0, reposConter).map((repo) => (\n          <UserTile\n            title={repo.name}\n            description={repo.description}\n            stars={repo.stargazers_count}\n            key={repo.id}\n            repoUrl={repo.html_url}\n          />\n        ))}\n        <ShowMore onClick={handleShowMore} disabled={Boolean(reposConter >= userReposAmount)}>\n          Show more\n        </ShowMore>\n      </>\n    );\n\n  if (userReposAmount === 0) content = <InfoBox type=\"info\" message={`${userName} doesn't have any repositories`} />;\n\n  if (nameOfUserWithReposLoading === userName) content = <Loader />;\n\n  return (\n    <Div column mBottom={10} width=\"100%\">\n      <Div padding={5} justifyBetween itemsCenter onClick={handleClick} background=\"#f2f2f2\" css=\"border-radius: 2px;\">\n        <p>{userName}</p>\n        <Arrow isRotated={isOpen} />\n      </Div>\n\n      {isOpen && <Div column>{content}</Div>}\n    </Div>\n  );\n};\n\nUserInformation.propTypes = propTypes;\n\nexport default connect(mapStateToProps)(UserInformation);\n\nconst ShowMore = styled.span`\n  font-size: 14px;\n  margin-top: 10px;\n  color: ${({ disabled }) => (disabled ? '#747474' : '#009de0')};\n  text-align: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Div from 'styled-kit/Div';\n\nimport Form from './components/Form';\nimport UserInformation from './components/UserInformation';\nimport InfoBox from './components/InfoBox';\nimport Loader from './components/Loader';\n\nconst mapStateToProps = ({ githubAccounts, githubAccountsLoading, searchedName, error }) => ({\n  githubAccounts,\n  githubAccountsLoading,\n  searchedName,\n  error,\n});\n\nconst propTypes = {\n  githubAccounts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  githubAccountsLoading: PropTypes.bool.isRequired,\n  searchedName: PropTypes.string.isRequired,\n  error: PropTypes.bool.isRequired,\n};\n\nfunction App({ githubAccounts, githubAccountsLoading, searchedName, error }) {\n  let content;\n\n  if (searchedName && githubAccounts.length > 0)\n    content = (\n      <>\n        <Info>{`Showing users for \"${searchedName}\"`}</Info>\n        {githubAccounts.map((account) => (\n          <UserInformation userName={account.login} reposUrl={account.repos_url} key={account.id} />\n        ))}\n      </>\n    );\n\n  if (searchedName && githubAccounts.length === 0)\n    content = <InfoBox type=\"error\" message={`Not users available under ${searchedName}`} mTop={18} />;\n\n  if (githubAccountsLoading) content = <Loader />;\n\n  return (\n    <Div column itemsCenter margin={10}>\n      {error && <InfoBox type=\"error\" message=\"Something went wrong, try again!\" />}\n\n      <h1>GitHub repositories explorer</h1>\n\n      <AppContainer column itemsCenter justifyCenter width=\"100%\" maxWidth={500}>\n        <Form />\n        {content}\n      </AppContainer>\n    </Div>\n  );\n}\n\nApp.propTypes = propTypes;\n\nexport default connect(mapStateToProps)(App);\n\nconst AppContainer = styled(Div)`\n  font-size: 16px;\n  word-break: break-word;\n`;\n\nconst Info = styled.p`\n  color: #747474;\n  margin: 18px 0;\n  align-self: flex-start;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './styles';\n\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <GlobalStyle />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}